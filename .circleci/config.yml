version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.6.3-node-browsers
         environment:
           RAILS_ENV: test
           BUNDLER_VERSION: 2.0.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:11.5
         environment:
           POSTGRES_USER: postgres
           POSTGRES_DB: game_share_test

    working_directory: ~/game_share

    steps:
      - checkout

       # Setup bundler 2+
      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler

      # Restore bundle cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      
      - run:
          name: Install Ruby Dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 120s

      - run:
          name: Database setup
          command: |
            bundle exec rails db:create
            bundle exec rails db:migrate
      
       # run tests!
      - run:
          name: Rspec
          command: bundle exec rspec

      - run:
          name: rubocop
          command: bundle exec rubocop
      

  deploy:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers

    working_directory: ~/game_share

    steps:
      - checkout
      - run:
          name: 'Install Heroku CLI, if necessary'
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: Deploy Master to Heroku
          command: |
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: Migration to Heroku
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master